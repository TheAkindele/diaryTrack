{"version":3,"sources":["components/navFolder/navStyle.js","components/navFolder/Navbar.js","redux/actions/authAction.js","redux/actions/actionConstants.js","components/homepageFolder/eventSummaryFolder/eventSummaryStyle.js","components/eventFolder/eventStyle.js","redux/actions/postActions.js","components/homepageFolder/eventSummaryFolder/EventSummary.js","components/homepageFolder/dashboardFolder/dashboardStyle.js","components/homepageFolder/dashboardFolder/Dashboard.js","components/eventFolder/Event.js","components/formInputFolder/Form-Input.js","components/buttonFolder/CustomButton.js","components/createEventFolder/newEventStyle.js","components/createEventFolder/NewEvent.js","components/signInAndOutFolder/signInStyle.js","firebaseFolder/firebase.js","components/signInAndOutFolder/SignIn.js","components/signInAndOutFolder/SignUp.js","App.js","redux/reducers/postReducer.js","redux/reducers/authReducer.js","redux/reducers/rootReducer.js","redux/storeFolder/store.js","index.js"],"names":["Navbar","styled","div","Navbox","NavItems","Title","Link","NavMenu","connect","state","userStatus","firebase","auth","dispatch","signOut","getState","getFirebase","then","type","to","uid","className","onClick","EventSummaryStyle","SummaryStyle","SummaryTitleStyle","SummaryFooterStyle","Eventbox","EventBody","EventFooter","DeleteButton","button","postDeleteAction","id","getFirestore","collection","doc","delete","catch","error","compose","allPosts","firestore","ordered","events","deleteEvent","postId","firestoreConnect","orderBy","map","post","key","title","summary","moment","createdAt","toDate","calendar","DashboardStyle","ownProps","match","params","eventId","allEvents","data","selectedpost","content","CustomFormInput","handleChange","label","otherProps","onChange","value","length","CustomButton","children","googleSignInBtn","signIn","signUp","otherButtonProps","NewEventStyle","NewEvent","e","target","name","setState","handleSubmit","preventDefault","props","newEvent","this","onSubmit","required","Component","createdEvent","newPost","profile","console","log","add","authorId","Date","firstname","lastname","payload","err","SignInStyle","SignButtonStyle","SignInErrorStyle","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup","SignIn","email","password","signInAuth","signInStatus","authState","authError","userCredential","credentials","signInWithEmailAndPassword","SignUp","confirmPassword","alert","registerNewUser","signUpError","message","userToRegister","newUser","createUserWithEmailAndPassword","response","user","set","firstName","lastName","initial","App","exact","path","component","Dashboard","Event","initPostState","posts","postReducer","action","authInitialState","authReducer","rootReducer","combineReducers","postState","firestoreReducer","firebaseReducer","middlewares","thunk","withExtraArgument","store","createStore","applyMiddleware","reduxFirestore","rrfProps","config","useFirestoreForProfile","userProfile","attachAuthIsReady","createFirestoreInstance","WaitTillAuth","authIsLoaded","isLoaded","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ccda5167.chunk.js","sourcesContent":["import styled from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const Navbar = styled.div`\r\n    height: 10vh;\r\n    width: 100vw;\r\n    background-color: black;\r\n    color: white;\r\n`\r\n\r\nexport const Navbox = styled.div`\r\n    width: 50%;\r\n    height: 100%;\r\n    margin: 0 auto;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n`\r\nexport const NavItems = styled.div`\r\nwidth: 40%;\r\n\r\n`\r\n\r\nexport const Title = styled(Link)`\r\n    color: yellow;\r\n    :hover{color: yellow;}\r\n`\r\n\r\nexport const NavMenu = styled.div`\r\n    display: flex;\r\n    justify-content: space-around;\r\n\r\n    .list, a{\r\n        padding: 10px;\r\n        color: white;\r\n        cursor: pointer;\r\n    }\r\n`\r\n\r\n","import React from 'react'\r\nimport { Navbar, Navbox, NavMenu, NavItems, Title } from './navStyle'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOutAction } from '../../redux/actions/authAction'\r\n\r\nconst NavBar = ({ signOut, userStatus }) => {\r\n    return (\r\n        <Navbar>\r\n            <Navbox>\r\n                <Title to='/'><h2>diaryTrack</h2></Title>\r\n                <NavItems>\r\n\r\n                    {\r\n                        userStatus.uid ?\r\n                            (<NavMenu>\r\n                                <Link to='/'>Events</Link>\r\n\r\n                                <Link to='/new-event' className=\"list new\">New Event</Link>\r\n\r\n                                <Link to='/sign-in' onClick={signOut}>Sign Out</Link>\r\n\r\n                            </NavMenu>)\r\n                            : (<Link to='/sign-in'>Sign In</Link>)\r\n                    }\r\n\r\n                </NavItems>\r\n            </Navbox>\r\n        </Navbar >\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    //console.log('navbar ', state)\r\n    return {\r\n        userStatus: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        signOut: () => dispatch(signOutAction())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar);","import { LOGIN_SUCCESS, LOGIN_ERROR, SIGN_OUT, SIGN_UP_SUCCESS, SIGN_UP_FAIL } from './actionConstants'\r\n\r\nexport const signInAction = credentials => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase()\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        )\r\n            .then(() => {\r\n                dispatch({ type: LOGIN_SUCCESS })\r\n            })\r\n            .catch(err => {\r\n                dispatch({ type: LOGIN_ERROR, payload: err })\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const signOutAction = () => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase()\r\n        firebase.auth().signOut()\r\n            .then(() => {\r\n                dispatch({ type: SIGN_OUT })\r\n            })\r\n    }\r\n}\r\n\r\nexport const signUpAction = newUser => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firebase = getFirebase()\r\n        const firestore = getFirestore()\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        )\r\n            .then(response => {\r\n                return firestore.collection('users').doc(response.user.uid).set({\r\n                    firstName: newUser.firstname,\r\n                    lastName: newUser.lastname,\r\n                    initial: newUser.firstname[0] + newUser.lastname[0]\r\n                })\r\n            })\r\n            .then(() => {\r\n                dispatch({ type: SIGN_UP_SUCCESS })\r\n            })\r\n            .catch(err => {\r\n                dispatch({ type: SIGN_UP_FAIL, payload: err })\r\n            })\r\n    }\r\n}\r\n","export const CREATE_POST = 'CREATE_POST'\r\nexport const GET_POST = 'GET_POST'\r\nexport const CREATE_POST_ERR = 'CREATE_POST_ERR'\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\r\nexport const LOGIN_ERROR = 'LOGIN_ERROR'\r\nexport const SIGN_OUT = 'SIGN_OUT'\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS'\r\nexport const SIGN_UP_FAIL = 'SIGN_UP_FAIL'\r\nexport const DELETE_POST = 'DELETE_POST'\r\n","import styled from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const EventSummaryStyle = styled.div`\r\n    margin-bottom: 10px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n`\r\n\r\nexport const SummaryStyle = styled.div`\r\n    background-color: lightgoldenrodyellow;\r\n    padding: 10px;\r\n    text-transform: capitalize;\r\n    width: 350px\r\n`\r\n\r\nexport const SummaryTitleStyle = styled(Link)`\r\n    color: blue;\r\n    :hover{color: red;}\r\n`\r\n\r\nexport const deleteStyle = styled.div`\r\n    background-color: black;\r\n    color: red;\r\n    padding: 5px;\r\n    border: 1px solid red;\r\n`\r\n\r\nexport const SummaryFooterStyle = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    background-color: pink;\r\n    padding: 5px;\r\n    color: green;\r\n\r\n    .poster{\r\n        font-weight: bolder;\r\n        text-transform: capitalize;\r\n        color: blue;\r\n    }\r\n`","import styled from 'styled-components'\r\n\r\nexport const Eventbox = styled.div`\r\n    width: 50%;\r\n    margin: 0 auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-top: 40px;\r\n`\r\n\r\nexport const EventBody = styled.div`\r\n    padding: 10px;\r\n        background-color: white;\r\n\r\n        .title{\r\n            padding: 10px;\r\n            text-align: center;\r\n            color: blue;\r\n        }\r\n\r\n        .summary{\r\n            span {color: tomato;}\r\n        }\r\n`\r\n\r\nexport const EventFooter = styled.div`\r\nbackground-color: lightgrey;\r\npadding: 10px;\r\n`\r\n\r\nexport const DeleteButton = styled.button`\r\nbackground-color: black;\r\ncolor: red;\r\npadding: 5px;\r\ntext-align: center;\r\nborder: none;\r\n`","import { CREATE_POST, CREATE_POST_ERR } from './actionConstants'\r\n\r\nexport const createPostAction = newPost => {\r\n    return (dispatch, getState, { getFirestore, getFirebase }) => {\r\n        const firestore = getFirestore()\r\n        //const firebase = getFirebase()\r\n        const id = getState().firebase.auth.uid\r\n        const profile = getState().firebase.profile\r\n        console.log('the profile ', profile)\r\n\r\n        firestore.collection('events').add({\r\n            ...newPost,\r\n            authorId: id,\r\n            createdAt: new Date(),\r\n            firstname: '',\r\n            lastname: '',\r\n        })\r\n            .then(() => {\r\n                dispatch({ type: CREATE_POST, payload: newPost })\r\n            })\r\n            .catch(err => {\r\n                dispatch({ type: CREATE_POST_ERR, payload: err })\r\n            })\r\n    }\r\n}\r\n\r\nexport const postDeleteAction = id => {\r\n    return (dispatch, getState, { getFirestore }) => {\r\n        const firestore = getFirestore()\r\n        ///const id = getState().firebase.auth.uid\r\n        firestore.collection('events').doc(id).delete()\r\n            .then(() => {\r\n                // console.log('document delete successful')\r\n            })\r\n            .catch((error) => {\r\n                //console.error(\"Error deleting document \", error);\r\n            })\r\n    }\r\n}\r\n\r\n","import React from 'react'\r\nimport { SummaryStyle, EventSummaryStyle, SummaryTitleStyle, SummaryFooterStyle } from './eventSummaryStyle'\r\nimport { DeleteButton } from '../../eventFolder/eventStyle'\r\nimport { connect } from 'react-redux'\r\nimport { postDeleteAction } from '../../../redux/actions/postActions'\r\nimport moment from 'moment'\r\n\r\nimport { compose } from 'redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\n\r\nfunction EventSummary({ allPosts, deleteEvent }) {\r\n    return (\r\n        <div className='event-summary'>\r\n\r\n            {\r\n                allPosts && allPosts.map(post => (\r\n                    <EventSummaryStyle key={post.id}>\r\n                        <SummaryStyle>\r\n                            <SummaryTitleStyle to={`/event/${post.id}`} >\r\n                                <h3 className=\"title\">{post.title}</h3>\r\n                            </SummaryTitleStyle>\r\n                            <h6 className=\"content-summary\">{post.summary}</h6>\r\n\r\n                        </SummaryStyle>\r\n                        <SummaryFooterStyle>\r\n                            <span className=\"date\">{moment(post.createdAt.toDate()).calendar()}</span>\r\n                        </SummaryFooterStyle>\r\n                        <DeleteButton onClick={() => deleteEvent(post.id)}>\r\n                            delete\r\n                </DeleteButton>\r\n                    </EventSummaryStyle>\r\n                ))\r\n            }\r\n        </div >\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    //console.log('the state= ', state)\r\n    return {\r\n        allPosts: state.firestore.ordered.events\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    deleteEvent: postId => dispatch(postDeleteAction(postId))\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect([{ collection: 'events', orderBy: ['createdAt', 'desc'] }])\r\n)(EventSummary)\r\n\r\n\r\n/*\r\n<span>Posted by <span className='poster'>poster name</span></span>\r\n*/","import styled from 'styled-components'\r\n\r\nexport const DashboardStyle = styled.div`\r\nwidth: 50%;\r\nmargin: 0 auto;\r\npadding: 25px 5px;\r\ndisplay: flex;\r\njustify-content: center;\r\n\r\n`","import React from 'react'\r\nimport EventSummary from '../eventSummaryFolder/EventSummary'\r\n//import Notification from '../notificationFolder/Notification'\r\nimport { DashboardStyle } from './dashboardStyle'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Dashboard = ({ userStatus }) => {\r\n    if (!userStatus.uid)\r\n        return <Redirect to='/sign-in'></Redirect>\r\n\r\n    return (\r\n        <DashboardStyle>\r\n            <div>\r\n                <EventSummary />\r\n            </div>\r\n\r\n        </DashboardStyle>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    userStatus: state.firebase.auth\r\n})\r\n\r\nexport default connect(mapStateToProps)(Dashboard)\r\n\r\n\r\n\r\n/*\r\n<div>\r\n                <Notification />\r\n            </div>\r\n*/","import React from 'react'\r\nimport { EventFooter, EventBody, Eventbox, DeleteButton } from './eventStyle'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { compose } from 'redux'\r\nimport { postDeleteAction } from '../../redux/actions/postActions'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport moment from 'moment'\r\n\r\nconst Event = ({ selectedpost, userStatus, deleteEvent, match }) => {\r\n    //console.log('selected ', selectedpost)\r\n    const id = match.params.eventId\r\n    //console.log('id= ', id)\r\n    if (!userStatus.uid)\r\n        return <Redirect to='/sign-in'></Redirect>\r\n\r\n    if (selectedpost) {\r\n        return (\r\n            <Eventbox>\r\n                <EventBody>\r\n                    <h2 className=\"title\">{selectedpost.title} {selectedpost.id}</h2>\r\n                    <h6 className='summary'>Summary: <span>{selectedpost.summary}</span></h6>\r\n                    <p className=\"content\">{selectedpost.content}</p>\r\n                </EventBody>\r\n                <EventFooter>\r\n                    <p className=\"date\">{moment(selectedpost.createdAt.toDate()).calendar()}</p>\r\n                </EventFooter>\r\n                <DeleteButton onClick={() => {\r\n                    deleteEvent(id)\r\n                    if (deleteEvent(id))\r\n                        return ' I don delete am'\r\n                }}>\r\n                    delete\r\n                </DeleteButton>\r\n            </Eventbox>\r\n        )\r\n    }\r\n    else {\r\n        return <Eventbox>Event Unavaiable</Eventbox>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    //console.log('event state= ', state)\r\n    const id = ownProps.match.params.eventId\r\n    //console.log('id= ', id)\r\n    const allEvents = state.firestore.data.events\r\n    const event = allEvents ? allEvents[id] : null\r\n    //console.log('single event ', event)\r\n    return {\r\n        selectedpost: event,\r\n        userStatus: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    deleteEvent: postId => dispatch(postDeleteAction(postId))\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect([{ collection: 'events' }])\r\n)(Event)\r\n","import React from 'react'\r\nimport './FormInputStyle.scss'\r\n\r\nconst CustomFormInput = ({ handleChange, label, ...otherProps }) => {\r\n    return (\r\n        <div className=\"group\">\r\n            <input className=\"form-input\" onChange={handleChange} {...otherProps} />\r\n            {\r\n                label ?\r\n                    (<label className={`${otherProps.value.length ? 'shrink' : ''} form-input-label`} > {label} </label>)\r\n                    : null\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CustomFormInput;","import React from 'react'\r\nimport './Button.scss'\r\n\r\nconst CustomButton = ({ children, googleSignInBtn, signIn, signUp, ...otherButtonProps }) => (\r\n    <button className={`\r\n    ${signUp ? 'sign-up' : ''}\r\n    ${signIn ? 'sign-in' : ''}\r\n    ${googleSignInBtn ? 'google-sign-in-btn' : ''}\r\n    custom-button`}\r\n        {...otherButtonProps} >\r\n        {children}\r\n    </button>\r\n)\r\n\r\nexport default CustomButton","import styled from 'styled-components'\r\n\r\nexport const NewEventStyle = styled.div`\r\n    background-color: white;\r\n    width: 40vw;\r\n    margin: 20px auto;\r\n    padding: 10px;\r\n    display: flex;\r\n    flex-direction: column;\r\n`","import React, { Component } from 'react';\r\nimport CustomFormInput from '../formInputFolder/Form-Input'\r\nimport CustomButton from '../buttonFolder/CustomButton'\r\nimport { NewEventStyle } from './newEventStyle'\r\nimport { connect } from 'react-redux'\r\nimport { createPostAction } from '../../redux/actions/postActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass NewEvent extends Component {\r\n    state = {\r\n        title: '',\r\n        summary: '',\r\n        content: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const { name, value } = e.target\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        //console.log('new event= ', this.state)\r\n        this.props.newEvent(this.state)\r\n        this.setState({ title: '', content: '', summary: '' })\r\n    }\r\n\r\n    render() {\r\n        const { userStatus } = this.props\r\n        if (!userStatus.uid)\r\n            return <Redirect to='/sign-in'></Redirect>\r\n\r\n        return (\r\n            <NewEventStyle>\r\n                <h3>Create New Event</h3>\r\n                <form onSubmit={this.handleSubmit}>\r\n\r\n                    <CustomFormInput type=\"text\" name='title' value={this.state.title} label='Title' handleChange={this.handleChange} />\r\n\r\n                    <CustomFormInput type=\"text\" name='summary' value={this.state.summary} label='Summary' handleChange={this.handleChange} required />\r\n\r\n                    <CustomFormInput type=\"text\" name='content' value={this.state.content} label='Content' handleChange={this.handleChange} required />\r\n\r\n                    <CustomButton type='submit'>Create Event</CustomButton>\r\n                </form>\r\n            </NewEventStyle>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    //console.log('new eevnt= ', state)\r\n    return {\r\n        userStatus: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    newEvent: createdEvent => dispatch(createPostAction(createdEvent))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewEvent);","import styled from 'styled-components'\r\n\r\nexport const SignInStyle = styled.div`\r\n    background-color: white;\r\n    width: 40vw;\r\n    margin: 20px auto;\r\n    padding: 10px;\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    h3{\r\n        width: 100%;\r\n        text-align: center;\r\n    }\r\n\r\n    .to-sign-up{\r\n        display: flex;\r\n        padding:20px 10px;\r\n\r\n        h5{\r\n            color: blue;\r\n            margin-left: 2px;\r\n\r\n            &:hover {\r\n                text-decoration: underline;\r\n                color: red;\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const SignButtonStyle = styled.div`\r\n    display: flex;\r\n    justify-content: space-around;\r\n`\r\n\r\nexport const SignInErrorStyle = styled.div`\r\n    color: red;\r\n    font-weight: bold;\r\n    text-align: center;\r\n    width: 100%;\r\n    padding: 5px;\r\n`","import firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\nimport 'firebase/firestore'\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyD_wq6NdAvByd7GUcJCFWorEZY4MB03JRY\",\r\n    authDomain: \"diary-app-148c0.firebaseapp.com\",\r\n    databaseURL: \"https://diary-app-148c0.firebaseio.com\",\r\n    projectId: \"diary-app-148c0\",\r\n    storageBucket: \"diary-app-148c0.appspot.com\",\r\n    messagingSenderId: \"731366878168\",\r\n    appId: \"1:731366878168:web:ef6ce3253ce732b5ea20ad\",\r\n    measurementId: \"G-SD6GX8MB6E\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.firestore()\r\nconst auth = firebase.auth()\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider()\r\nprovider.setCustomParameters({ prompt: 'select_account' })\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider)\r\n\r\nexport default firebase\r\n","import React, { Component } from 'react';\r\nimport CustomFormInput from '../formInputFolder/Form-Input'\r\nimport CustomButton from '../buttonFolder/CustomButton'\r\nimport { SignInStyle, SignButtonStyle, SignInErrorStyle } from './signInStyle'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signInAction } from '../../redux/actions/authAction'\r\nimport { signInWithGoogle } from '../../firebaseFolder/firebase'\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const { name, value } = e.target\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault()\r\n        //console.log('sign in= ', this.state)\r\n        this.props.signInAuth(this.state)\r\n        this.setState({ email: '', password: '' })\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        const { signInStatus, userStatus } = this.props\r\n        if (userStatus.uid)\r\n            return <Redirect to='/'></Redirect>\r\n\r\n        return (\r\n            <SignInStyle>\r\n                <h3>Sign In</h3>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <SignInErrorStyle>\r\n                        {\r\n                            signInStatus ? <p>{signInStatus}</p> : null\r\n                        }\r\n                    </SignInErrorStyle>\r\n                    <CustomFormInput type=\"email\" name='email' value={this.state.email} label='Email' handleChange={this.handleChange} />\r\n\r\n                    <CustomFormInput type=\"password\" name='password' value={this.state.password} label='Password' handleChange={this.handleChange} required />\r\n\r\n                    <SignButtonStyle>\r\n                        <CustomButton signIn type='submit'>Sign In</CustomButton>\r\n                        <CustomButton onClick={signInWithGoogle} googleSignInBtn>Sign In With Google</CustomButton>\r\n                    </SignButtonStyle>\r\n\r\n                    <div className=\"to-sign-up\">Dont have an account? <Link to='/sign-up'><h5>  Click here to sign up</h5></Link></div>\r\n\r\n                </form>\r\n            </SignInStyle>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    //console.log('sign in= ', state)\r\n    return {\r\n        signInStatus: state.authState.authError,\r\n        userStatus: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchtoProps = dispatch => {\r\n    return {\r\n        signInAuth: userCredential => dispatch(signInAction(userCredential))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchtoProps)(SignIn);\r\n\r\n","import React, { Component } from 'react';\r\nimport CustomFormInput from '../formInputFolder/Form-Input'\r\nimport CustomButton from '../buttonFolder/CustomButton'\r\nimport { SignInStyle, SignInErrorStyle } from './signInStyle'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { signUpAction } from '../../redux/actions/authAction'\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        firstname: '',\r\n        lastname: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const { name, value } = e.target\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        const { password, confirmPassword } = this.state\r\n        e.preventDefault()\r\n        console.log('sign up= ', this.state)\r\n        if (password !== confirmPassword) {\r\n            alert('Password must be same as Confirm Password')\r\n            return this.setState({\r\n                confirmPassword: ''\r\n            })\r\n        }\r\n\r\n        this.props.registerNewUser(this.state)\r\n        this.setState({\r\n            firstname: '', lastname: '', email: '', password: '', confirmPassword: ''\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { userStatus, signUpError } = this.props\r\n        if (userStatus.uid)\r\n            return <Redirect to='/'></Redirect>\r\n\r\n        return (\r\n            <SignInStyle>\r\n                <h3>Sign Up</h3>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <SignInErrorStyle>\r\n                        {\r\n                            signUpError ? <h5>{signUpError.message}</h5> : null\r\n                        }\r\n                    </SignInErrorStyle>\r\n\r\n                    <CustomFormInput type=\"text\" name='firstname' value={this.state.firstname} label='First Name' handleChange={this.handleChange} />\r\n\r\n                    <CustomFormInput type=\"text\" name='lastname' value={this.state.lastname} label='Last Name' handleChange={this.handleChange} />\r\n\r\n                    <CustomFormInput type=\"email\" name='email' value={this.state.email} label='Email' handleChange={this.handleChange} />\r\n\r\n                    <CustomFormInput type=\"password\" name='password' value={this.state.password} label='Password' handleChange={this.handleChange} required />\r\n\r\n                    <CustomFormInput type=\"password\" name='confirmPassword' value={this.state.confirmPassword} label='Confirm Password' handleChange={this.handleChange} required />\r\n\r\n                    <CustomButton signUp type='submit'>Sign Up</CustomButton>\r\n                </form>\r\n            </SignInStyle>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    //console.log('signup ', state)\r\n    return {\r\n        userStatus: state.firebase.auth,\r\n        signUpError: state.authState.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    registerNewUser: userToRegister => dispatch(signUpAction(userToRegister))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { Route, Switch } from 'react-router-dom'\nimport NavBar from './components/navFolder/Navbar'\nimport Dashboard from './components/homepageFolder/dashboardFolder/Dashboard'\nimport Event from './components/eventFolder/Event'\nimport NewEvent from './components/createEventFolder/NewEvent'\nimport SignIn from './components/signInAndOutFolder/SignIn'\nimport SignUp from './components/signInAndOutFolder/SignUp'\nimport './App.scss'\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <NavBar />\n      <Switch>\n        <Route exact path='/' component={Dashboard} />\n        <Route path='/event/:eventId' component={Event} />\n        <Route path='/new-event' component={NewEvent} />\n        <Route path='/sign-in' component={SignIn} />\n        <Route path='/sign-up' component={SignUp} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import { CREATE_POST, CREATE_POST_ERR, GET_POST, DELETE_POST } from '../actions/actionConstants'\r\n\r\nconst initPostState = {\r\n    posts: [],\r\n    post: ''\r\n}\r\n\r\nconst postReducer = (state = initPostState, action) => {\r\n    switch (action.type) {\r\n        case (CREATE_POST):\r\n            //console.log('created project= ', action.payload)\r\n            return state\r\n\r\n        case CREATE_POST_ERR:\r\n            //console.log('error message ', action.payload)\r\n            return state\r\n\r\n        case (GET_POST):\r\n            return ({\r\n                ...state,\r\n                post: action.payload\r\n            })\r\n\r\n        case DELETE_POST:\r\n            //console.log('post deleted ')\r\n            return state\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default postReducer\r\n\r\n","import { LOGIN_SUCCESS, LOGIN_ERROR, SIGN_OUT, SIGN_UP_SUCCESS, SIGN_UP_FAIL } from '../actions/actionConstants'\r\n\r\nconst authInitialState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = authInitialState, action) => {\r\n    switch (action.type) {\r\n        case LOGIN_SUCCESS:\r\n            //console.log('Login successful')\r\n            return ({\r\n                ...state,\r\n                authError: null\r\n            })\r\n\r\n        case LOGIN_ERROR:\r\n            //console.log('login error ', action.payload)\r\n            return ({\r\n                ...state,\r\n                authError: 'Login Input Error'\r\n            })\r\n\r\n        case SIGN_OUT:\r\n            //console.log('signout success')\r\n            return state\r\n\r\n        case SIGN_UP_SUCCESS:\r\n            //console.log('sign up success')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n\r\n        case SIGN_UP_FAIL:\r\n            //console.log('sign up error')\r\n            return {\r\n                ...state,\r\n                authError: action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default authReducer","import { combineReducers } from 'redux'\r\nimport postReducer from './postReducer'\r\nimport authReducer from './authReducer'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n    postState: postReducer,\r\n    authState: authReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n})\r\n\r\nexport default rootReducer","import React from 'react'\r\nimport App from '../../App'\r\nimport { connect } from 'react-redux'\r\nimport { createStore, applyMiddleware, compose } from 'redux'\r\n//import logger from 'redux-logger'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from '../reducers/rootReducer'\r\nimport firebase from '../../firebaseFolder/firebase'\r\nimport { getFirebase } from 'react-redux-firebase'\r\nimport { getFirestore, reduxFirestore, createFirestoreInstance } from 'redux-firestore'\r\n\r\nconst middlewares = [thunk.withExtraArgument(\r\n    { getFirebase, getFirestore })]  //logger\r\n\r\nconst store = createStore(rootReducer,\r\n    compose(\r\n        applyMiddleware(...middlewares),\r\n        reduxFirestore(firebase)\r\n    )\r\n)\r\n\r\nconst rrfConfig = {\r\n    useFirestoreForProfile: true,\r\n    userProfile: \"users \",\r\n    attachAuthIsReady: true\r\n};\r\n\r\nexport const rrfProps = {\r\n    firebase,\r\n    config: rrfConfig,\r\n    dispatch: store.dispatch,\r\n    createFirestoreInstance\r\n}\r\n\r\n///1a. To wait till auth load before showing the homepage, we say\r\n//1b. first mapStateToProps\r\nconst mapStateToProps = (state) => ({\r\n    authIsLoaded: state.firebase.auth && state.firebase.auth.isLoaded,\r\n});\r\n\r\n//1c. Then we make a waitTillAuth function\r\nexport const WaitTillAuth = connect(mapStateToProps)(({ authIsLoaded }) => {\r\n    if (!authIsLoaded) return <div className='load'>Loading...</div>;\r\n    return (\r\n        <App />\r\n    );\r\n});\r\n\r\nexport default store\r\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom'\nimport ReactDOM from 'react-dom'; import { Provider } from 'react-redux'\nimport { ReactReduxFirebaseProvider } from 'react-redux-firebase'\nimport store, { WaitTillAuth, rrfProps } from './redux/storeFolder/store'\n\n\n//1d. (cont'd from store.js) Then we call the function in our render\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <BrowserRouter>\n        <WaitTillAuth />\n      </BrowserRouter>\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}